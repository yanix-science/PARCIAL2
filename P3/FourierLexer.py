# Generated from FourierLexer.g4 by ANTLR 4.13.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,86,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
        1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,
        1,10,5,10,62,8,10,10,10,12,10,65,9,10,1,11,4,11,68,8,11,11,11,12,
        11,69,1,11,1,11,4,11,74,8,11,11,11,12,11,75,3,11,78,8,11,1,12,4,
        12,81,8,12,11,12,12,12,82,1,12,1,12,0,0,13,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,1,0,4,3,0,65,90,95,95,97,
        122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,32,
        90,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
        11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,
        21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,1,27,1,0,0,0,3,35,1,0,0,0,5,
        40,1,0,0,0,7,45,1,0,0,0,9,47,1,0,0,0,11,49,1,0,0,0,13,51,1,0,0,0,
        15,53,1,0,0,0,17,55,1,0,0,0,19,57,1,0,0,0,21,59,1,0,0,0,23,67,1,
        0,0,0,25,80,1,0,0,0,27,28,5,102,0,0,28,29,5,111,0,0,29,30,5,117,
        0,0,30,31,5,114,0,0,31,32,5,105,0,0,32,33,5,101,0,0,33,34,5,114,
        0,0,34,2,1,0,0,0,35,36,5,114,0,0,36,37,5,101,0,0,37,38,5,97,0,0,
        38,39,5,108,0,0,39,4,1,0,0,0,40,41,5,105,0,0,41,42,5,109,0,0,42,
        43,5,97,0,0,43,44,5,103,0,0,44,6,1,0,0,0,45,46,5,43,0,0,46,8,1,0,
        0,0,47,48,5,45,0,0,48,10,1,0,0,0,49,50,5,42,0,0,50,12,1,0,0,0,51,
        52,5,47,0,0,52,14,1,0,0,0,53,54,5,94,0,0,54,16,1,0,0,0,55,56,5,40,
        0,0,56,18,1,0,0,0,57,58,5,41,0,0,58,20,1,0,0,0,59,63,7,0,0,0,60,
        62,7,1,0,0,61,60,1,0,0,0,62,65,1,0,0,0,63,61,1,0,0,0,63,64,1,0,0,
        0,64,22,1,0,0,0,65,63,1,0,0,0,66,68,7,2,0,0,67,66,1,0,0,0,68,69,
        1,0,0,0,69,67,1,0,0,0,69,70,1,0,0,0,70,77,1,0,0,0,71,73,5,46,0,0,
        72,74,7,2,0,0,73,72,1,0,0,0,74,75,1,0,0,0,75,73,1,0,0,0,75,76,1,
        0,0,0,76,78,1,0,0,0,77,71,1,0,0,0,77,78,1,0,0,0,78,24,1,0,0,0,79,
        81,7,3,0,0,80,79,1,0,0,0,81,82,1,0,0,0,82,80,1,0,0,0,82,83,1,0,0,
        0,83,84,1,0,0,0,84,85,6,12,0,0,85,26,1,0,0,0,6,0,63,69,75,77,82,
        1,6,0,0
    ]

class FourierLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    FOURIER = 1
    REAL = 2
    IMAG = 3
    PLUS = 4
    MINUS = 5
    MULT = 6
    DIV = 7
    POW = 8
    LPAREN = 9
    RPAREN = 10
    ID = 11
    NUMBER = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'fourier'", "'real'", "'imag'", "'+'", "'-'", "'*'", "'/'", 
            "'^'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "FOURIER", "REAL", "IMAG", "PLUS", "MINUS", "MULT", "DIV", "POW", 
            "LPAREN", "RPAREN", "ID", "NUMBER", "WS" ]

    ruleNames = [ "FOURIER", "REAL", "IMAG", "PLUS", "MINUS", "MULT", "DIV", 
                  "POW", "LPAREN", "RPAREN", "ID", "NUMBER", "WS" ]

    grammarFileName = "FourierLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


